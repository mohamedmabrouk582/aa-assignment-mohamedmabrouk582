plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}
apply from: '../common_test_build.gradle'


android {
    signingConfigs {
        debug {
            storeFile file(DEBUG_STORE_FILE)
            storePassword DEBUG_STORE_PASSWORD
            keyAlias DEBUG_KEY_ALIAS
            keyPassword DEBUG_KEY_PASSWORD
        }
        release {
            storeFile file(String.valueOf((System.getenv("ANDROID_KEYSTORE_PATH"))))
            storePassword System.getenv("BITRISEIO_ANDROID_KEYSTORE_PASSWORD")
            keyAlias System.getenv("BITRISEIO_ANDROID_KEYSTORE_ALIAS")
            keyPassword System.getenv("BITRISEIO_ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD")
        }
    }
    namespace 'com.mabrouk.newstask'
    compileSdk 32

    defaultConfig {
        applicationId "com.mabrouk.newstask"
        minSdk 23
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.mabrouk.newstask.HiltTestRunner"
        buildConfigField('String', 'Base_Url', Base_Url)
        buildConfigField('String', 'API_KEY', API_KEY)
        signingConfig signingConfigs.debug
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"

    productFlavors{
        free{
            applicationId "com.mabrouk.newstask.free"
            applicationIdSuffix ".free"
            versionCode 1
            versionName "1.0-free"
        }

        paid{
            applicationId "com.mabrouk.newstask.paid"
            applicationIdSuffix ".paid"
            versionCode 1
            versionName "1.0-paid"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }

    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES', 'META-INF/LICENSE', 'META-INF/LICENSE.txt', 'META-INF/license.txt', 'META-INF/NOTICE', 'META-INF/NOTICE.txt', 'META-INF/notice.txt', 'META-INF/ASL2.0', 'META-INF/AL2.0', 'META-INF/LGPL2.1', 'META-INF/*.kotlin_module']
        }
    }

    lint {
        abortOnError false
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }

//    configurations.all {
//        resolutionStrategy {
//            exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-debug"
//        }
//    }

    testOptions {
        animationsDisabled = true
//        unitTests.all {
//            useJUnitPlatform() // <--- this is the important part
//        }
    }

    hilt {
        enableTransformForLocalTests = true
    }
}

dependencies {
    implementation libs.androidCore
    implementation libs.appcompat
    implementation libs.constraintlayout
    implementation libs.materialDesgin
    implementation libs.multidex
    implementation libs.recyclerview
    implementation libs.cardview
    implementation libs.legacy


    //glide
    implementation libs.glide
    kapt libs.glideKapt


    //retrofit
    implementation libs.retrofit

    //shimmer
    implementation libs.shimmer

    //coroutines
    implementation libs.coroutines

    //dagger hilt
    implementation libs.daggerHilt
    kapt libs.daggerHiltKapt

    // lifecycle
    implementation libs.lifecycle

    //room
    implementation libs.room
    kapt libs.roomKapt
    testImplementation libs.roomTest
    //  kapt "android.arch.persistence.room:compiler:1.1.1"

    compileOnly libs.jsr250
    debugImplementation libs.leakcanary

}



kapt {
    correctErrorTypes = true
}

hilt {
    enableAggregatingTask = true
}